{"version":3,"sources":["components/Header.js","services/moviesServices.js","components/SimilarMovies.js","components/MovieDetailPage.js","components/LandingPage.js","utils/debounce.js","components/Footer.js","components/NowShowingMoviesPage.js","components/TopRatedMoviesPage.js","components/UpcomingMoviesPage.js","components/CastCrewDetailPage.js","components/SimilarMoviesPage.js","components/HomeContainer.js","App.js","serviceWorker.js","index.js","config.js"],"names":["Header","Navbar","bg","variant","expand","id","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","DropdownButton","alignRight","title","Dropdown","Item","eventKey","as","to","Divider","Component","getNowPlayingMovies","axios","get","config","API_BASE_URL","headers","authorization","ACCESS_TOKEN","then","response","data","results","catch","e","console","log","getUpcomingMovies","getMovieDetail","movieId","getSimilarMovies","SimilarMovies","props","state","similarMovies","loading","this","className","slice","map","index","Card","key","Img","src","poster_path","Row","Col","lg","Button","MovieDetailPage","handleReview","setState","review","target","value","handleSubmitReview","preventDefault","reviews","getPosterUrl","path","detail","Promise","all","match","params","oldProps","alt","tagline","icon","faStar","color","vote_average","release_date","genres","genre","name","runtime","status","overview","credits","crew","item","department","cast","character","Form","Group","Label","Control","onChange","type","onClick","length","Table","responsive","LandingPage","onSearchChange","event","newValue","movie","onSuggestionsFetchRequested","func","wait","immediate","timeout","context","args","arguments","later","apply","callNow","clearTimeout","setTimeout","debounce","a","movieText","suggestions","onSuggestionsClearRequested","nowShowingLoading","upcomingLoading","nowShowingList","upcomingList","Carousel","height","sm","inline","InputGroup","inputProps","placeholder","getSuggestionValue","suggestion","renderSuggestion","Body","Title","ListGroup","ListGroupItem","Footer","NowShowingMoviePage","TopRatedMoviesPage","topRatedList","UpcomingMoviesPage","CastCrewDetailPage","getProfileUrl","castId","profile_path","known_for_department","birthday","place_of_birth","gender","biography","job","SimilarMoviesPage","movieDetail","HomeContainer","Container","fluid","render","App","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports","process"],"mappings":"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","file":"static/js/main.accef54b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Navbar, Nav, Dropdown, DropdownButton } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <div>\n        <Navbar bg=\"black\" variant=\"dark\" expand=\"lg\" id=\"main-nav\">\n          <Navbar.Brand href=\"/movies-app\">Movie App</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav>\n              <Nav.Link href=\"/movies-app\">Home</Nav.Link>\n              <Nav.Link>\n                <DropdownButton alignRight title=\"Movies\" id=\"navbar-dropdown-menu\">\n                  <Dropdown.Item eventKey=\"1\" id=\"dropdown-menu-item\" as={Link} to=\"/now-showing\">Now Showing</Dropdown.Item>\n                  <Dropdown.Item eventKey=\"2\" id=\"dropdown-menu-item\" as={Link} to=\"/top-rated\">Top rated</Dropdown.Item>\n                  <Dropdown.Item eventKey=\"3\" id=\"dropdown-menu-item\" as={Link} to=\"/upcoming\">Upcoming</Dropdown.Item>\n                  <Dropdown.Divider />\n                  <Dropdown.Item eventKey=\"4\" id=\"dropdown-menu-item\">Thriller</Dropdown.Item>\n                  <Dropdown.Item eventKey=\"5\" id=\"dropdown-menu-item\">Horror</Dropdown.Item>\n                </DropdownButton>\n              </Nav.Link>\n              <Nav.Link>\n                <DropdownButton alignRight title=\"TV Shows\" id=\"navbar-dropdown-menu\">\n                  <Dropdown.Item eventKey=\"11\" id=\"dropdown-menu-item\">Now Showing</Dropdown.Item>\n                  <Dropdown.Item eventKey=\"12\" id=\"dropdown-menu-item\">Top rated</Dropdown.Item>\n                  <Dropdown.Item eventKey=\"13\" id=\"dropdown-menu-item\">Upcoming</Dropdown.Item>\n                  <Dropdown.Divider />\n                  <Dropdown.Item eventKey=\"14\" id=\"dropdown-menu-item\">Thriller</Dropdown.Item>\n                  <Dropdown.Item eventKey=\"15\" id=\"dropdown-menu-item\">Horror</Dropdown.Item>\n                </DropdownButton>\n              </Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n      </div>\n    )\n  }\n}\n","import config from '../config';\nimport axios from 'axios';\n\nexport function getNowPlayingMovies() {\n  return axios.get(`${config.API_BASE_URL}/movie/now_playing`, {\n    headers: {\n      authorization: `Bearer ${config.ACCESS_TOKEN}`\n    }\n  })\n  .then(response =>  response.data.results)\n  .catch((e) => console.log(e))\n}\n\nexport function getUpcomingMovies() {\n  return axios.get(`${config.API_BASE_URL}/movie/upcoming`, {\n    headers: {\n      authorization: `Bearer ${config.ACCESS_TOKEN}`\n    }\n  })\n  .then(response => response.data.results)\n  .catch((e) => console.log(e))\n}\n\nexport function getTopRatedMovies() {\n  return axios.get(`${config.API_BASE_URL}/movie/top_rated`, {\n    headers: {\n      authorization: `Bearer ${config.ACCESS_TOKEN}`\n    }\n  })\n  .then(response => response.data.results)\n  .catch((e) => console.log(e))\n}\n\nexport function getMovieDetail(movieId) {\n  return axios.get(`${config.API_BASE_URL}/movie/${movieId}?append_to_response=credits`, {\n    headers: {\n      authorization: `Bearer ${config.ACCESS_TOKEN}`\n    }\n  })\n  .then(response => response.data)\n  .catch((e) => console.log(e))\n}\n\nexport function getCastCrewDetail(castId) {\n  return axios.get(`${config.API_BASE_URL}/person/${castId}?append_to_response=credits`, {\n    headers: {\n      authorization: `Bearer ${config.ACCESS_TOKEN}`\n    }\n  })\n  .then(response => response.data)\n  .catch((e) => console.log(e))\n}\n\nexport function getSimilarMovies(movieId) {\n  return axios.get(`${config.API_BASE_URL}/movie/${movieId}/similar`, {\n    headers: {\n      authorization: `Bearer ${config.ACCESS_TOKEN}`\n    }\n  })\n  .then(response => response.data.results)\n  .catch((e) => console.log(e))\n}\n\nexport function getSearchMovie(movieText) {\n  return axios.get(`${config.API_BASE_URL}/search/movie?query=${movieText}`, {\n    headers: {\n      authorization: `Bearer ${config.ACCESS_TOKEN}`\n    }\n  })\n  .then(response => response.data.results)\n}","import React, { Component } from 'react';\nimport { Card, Button, Row, Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nexport default class SimilarMovies extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      similarMovies : props.similarMovies || [],\n      loading: false\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h5 id=\"similar-movies-heading\">Similar Movies :</h5>\n        {this.state.loading ? \n          <h5 className=\"loading\">Loading.........</h5> :\n          <div>\n            {this.state.similarMovies.slice(0,3).map((data,index) => \n              <Card id=\"similar-movie-card\" as={Link} to={`/movie-detail/${data.id}`} key={index}>\n                <Card.Img variant=\"top\" src={`https://image.tmdb.org/t/p/w500/${data.poster_path}`} />\n                <p className=\"similar-movie-title\">{data.title}</p>\n              </Card>\n            )}\n            <Row>\n              <Col lg={3} />\n              <Col lg={6}>\n                <Button \n                  variant=\"secondary\" \n                  className=\"landing-page-button\" \n                  as={Link} \n                  to={`/similar-movies/${this.props.movieId}`}\n                >\n                  View More\n                </Button>\n              </Col>\n              <Col lg={3} />\n            </Row> \n          </div> \n        }\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { Row, Col, Form, Button, Table } from 'react-bootstrap';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faStar } from '@fortawesome/free-solid-svg-icons';\n\nimport { getMovieDetail, getSimilarMovies } from '../services/moviesServices';\n\nimport SimilarMovies from './SimilarMovies';\n\nexport default class MovieDetailPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      detail: [],\n      similarMovies: [],\n      reviews: [],\n      review: ''\n    }\n  }\n\n  async componentDidMount() {\n    this.setState({ loading: true })\n\n    let detail = [];\n    let similarMovies = [];\n\n    try {\n      [ detail, similarMovies ] = await Promise.all([\n        getMovieDetail(this.props.match.params.id),\n        getSimilarMovies(this.props.match.params.id)\n      ]);\n      console.log('this...', detail);\n      console.log('here...', similarMovies);\n    } catch (e) {\n      console.log(\"There is an error........\", e);\n    }\n\n    this.setState({\n      detail,\n      similarMovies,\n      loading: false\n    })\n  }\n\n  async componentDidUpdate(oldProps) {\n    if (oldProps.match.params.id !== this.props.match.params.id) {\n      this.setState({ loading: true })\n\n      let detail = [];\n      let similarMovies = [];\n\n      try {\n        [ detail, similarMovies ] = await Promise.all([\n          getMovieDetail(this.props.match.params.id),\n          getSimilarMovies(this.props.match.params.id)\n        ]);\n      } catch (e) {\n        console.log('There is an error........', e);\n      }\n\n      this.setState({\n        detail,\n        similarMovies,\n        loading: false\n      })\n    }\n  }\n\n  handleReview = (e) => {\n    this.setState({\n      review: e.target.value\n    })\n  }\n\n  handleSubmitReview = (e) => {\n    e.preventDefault();\n    \n    if (!this.state.review) {\n      return;\n    }\n\n    const reviews = [...this.state.reviews, this.state.review];\n    this.setState({\n      reviews,\n      review: ''\n    })\n    console.log(this.state.reviews)\n  }\n\n  getPosterUrl = (path) => {\n    if(!path) {\n      return '/no-image.jpg'\n    }\n  \n    return `https://image.tmdb.org/t/p/w500/${path}`\n  }\n\n  render() {\n    return (\n      <div className=\"container-wrapper movie-detail\">\n        <div className=\"movie-detail-container\">\n          {this.state.loading ? \n            <h5 className=\"loading\">Loading.........</h5> :\n            <Row>\n              <Col lg={3}>\n                <img \n                  alt=\"\" \n                  src={ this.getPosterUrl(this.state.detail.poster_path) } \n                  id=\"movie-detail-image\" \n                />\n                <Button variant=\"secondary\" className=\"movie-detail-left-part\">Watch Trailer</Button>\n                <Button variant=\"secondary\" className=\"movie-detail-left-part\">Rate Movie</Button>\n              </Col>\n              <Col lg={6}>\n                <h3>{this.state.detail.title}</h3>\n                <h6><i>{this.state.detail.tagline}</i></h6>\n                <p className=\"rating\"><FontAwesomeIcon icon={faStar} color=\"#f5af22\"/> {this.state.detail.vote_average}</p>\n                <ul className=\"list-inline\">\n                  <li className=\"list-inline-li\">{this.state.detail.release_date}</li>\n                  <li className=\"list-inline-li\">\n                    {this.state.detail.genres ? \n                      this.state.detail.genres.map((genre, index) => \n                        <p key={index} className=\"genre-list\">{ genre.name }</p> ) \n                      : \"\"\n                    }\n                  </li>\n                  <li className=\"list-inline-li\">{this.state.detail.runtime} minutes</li>\n                  <li>{this.state.detail.status}</li>\n                </ul>\n                <p className=\"overview\">{this.state.detail.overview}</p>\n                <h6>Director :</h6>\n                <ul>\n                  {this.state.detail.credits &&\n                    this.state.detail.credits.crew.map((item, index) => \n                      item.department  === \"Directing\" ? \n                      <li key={index}>\n                        <a href={`/cast-crew-detail/${item.id}`} className=\"cast-crew-link\">{ item.name }</a>\n                      </li> \n                      : \"\" \n                    )\n                  }\n                </ul>\n                <h6>Cast : </h6>\n                <ul>\n                  {this.state.detail.credits ? \n                    this.state.detail.credits.cast.map((item, index) => \n                      <li key={index}>\n                        <a href={`/cast-crew-detail/${item.id}`} className=\"cast-crew-link\">{ item.name }</a>\n                        { item.character ? \n                          <p className=\"character-names\"> as { item.character }</p> \n                          : \"\" \n                        }\n                      </li>\n                    ) \n                    : \"\" \n                  }\n                </ul>\n                <Form className=\"movie-review\">\n                  <Form.Group>\n                    <Form.Label id=\"review-heading\">Write a review</Form.Label>\n                    <Form.Control \n                      as=\"textarea\" \n                      className=\"review-box\" \n                      name=\"text\" value={this.state.review} \n                      onChange={this.handleReview} \n                    />\n                  </Form.Group>\n                  <Button variant=\"secondary\" type=\"submit\" onClick={this.handleSubmitReview}>Submit</Button>\n                </Form>\n                <div className=\"movie-review\">\n                  <p>Reviews : </p>\n                  {this.state.reviews.length !== 0 ?\n                    <Table responsive>\n                      <tbody>\n                          {this.state.reviews.map((data,index) => \n                              <tr key={index}>\n                                  <td>{index + 1}. {data}</td>\n                              </tr>\n                          )}\n                      </tbody>\n                    </Table> \n                    : <p>No reviews yet</p>\n                  }\n                </div>\n              </Col>\n              <Col lg={3}>\n                <SimilarMovies\n                  similarMovies={this.state.similarMovies}\n                  movieId={this.props.match.params.id}\n                />\n              </Col>\n            </Row>\n          }\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { Row, Col, Button, Carousel, Card, ListGroup, ListGroupItem, Form, InputGroup } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport Autosuggest from 'react-autosuggest';\n\nimport { getNowPlayingMovies, getUpcomingMovies, getSearchMovie } from '../services/moviesServices';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faStar } from '@fortawesome/free-solid-svg-icons';\n// import Search from './Search';\n\nimport debounce from '../utils/debounce';\n\nexport default class LandingPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nowShowingLoading: false,\n      upcomingLoading: false,\n      nowShowingList: [],\n      upcomingList: [],\n      movie: '',\n      suggestions: [],\n    }\n  }\n\n  async componentDidMount() {\n    this.setState({ \n      nowShowingLoading: true,\n      upcomingLoading: true \n    })\n\n    let nowShowingList = [];\n    let upcomingList   = [];\n\n    try {\n      [ nowShowingList, upcomingList ] = await Promise.all([\n        getNowPlayingMovies(),\n        getUpcomingMovies(),\n      ]);\n    } catch (e) {\n      // handle your errors here\n      console.log('Error...', e);\n    }\n\n    this.setState({\n      nowShowingList,\n      nowShowingLoading: false,\n      upcomingList,\n      upcomingLoading:false,\n    })\n  }\n\n  getPosterUrl = (path) => {\n    if(!path) {\n      return '/no-image.jpg'\n    }\n  \n    return `https://image.tmdb.org/t/p/w500/${path}`\n  }\n\n  onSearchChange = ( event, { newValue } ) => {\n    this.setState({\n      movie: newValue\n    })\n  }\n\n  onSuggestionsFetchRequested = debounce(async ({ value }) => {\n    try {\n      let suggestions = await getSearchMovie(value);\n      console.log('this is auto suggestions......',suggestions);\n      this.setState({\n        suggestions\n      })\n    } catch (e) {\n      console.log('there is an error......', e);\n    }\n  }, 1000)\n\n  onSuggestionsClearRequested = () => {\n    this.setState({\n      suggestions: [],\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"carousel-wrapper\">\n          <Carousel className=\"slider\">\n            <Carousel.Item>\n              <img\n                className=\"d-block w-100\"\n                src=\"seats.jpg\"\n                alt=\"First slide\"\n                height=\"500px\"\n              />\n            </Carousel.Item>\n            <Carousel.Item>\n              <img\n                className=\"d-block w-100\"\n                src=\"seatswithagirl.jpg\"\n                alt=\"Second slide\"\n                height=\"500px\"\n              />\n            </Carousel.Item>\n          </Carousel>\n          <Row className=\"nav-search\">\n            <Col lg={3} sm={3} />\n            <Col lg={6} sm={6}>\n              <Form inline>\n                <InputGroup id=\"inputgroup-search\">\n                  <Autosuggest \n                    inputProps = {{\n                      placeholder: \"Enter your movie title here.\",\n                      value: this.state.movie,\n                      onChange: this.onSearchChange\n                    }}\n                    suggestions = { this.state.suggestions }\n                    onSuggestionsFetchRequested = { this.onSuggestionsFetchRequested }\n                    onSuggestionsClearRequested = { this.onSuggestionsClearRequested }\n                    getSuggestionValue = { suggestion => suggestion.title }\n                    renderSuggestion = { suggestion => (\n                      <Card id=\"search-suggestions-card\" as={ Link } to={`/movie-detail/${suggestion.id}`} >\n                        <img alt=\"\" className=\"search-suggestions-image\" src={this.getPosterUrl(suggestion.poster_path)}/>\n                        <span className=\"search-suggestions-movie-title\">\n                            {suggestion.title} \n                            <FontAwesomeIcon icon={faStar} color=\"#f5af22\" className=\"search-suggestions-rating\" /> \n                            {suggestion.vote_average}\n                        </span>\n                      </Card>\n                    )}\n                  />\n                </InputGroup>\n              </Form>\n            </Col>\n            <Col lg={3} sm={3} />\n          </Row>\n        </div>\n        <div className=\"movies-list-title container-wrapper\">\n          <p>Now Showing Movies</p>\n        </div>\n        <div className=\"movies-list container-wrapper\">\n          {this.state.nowShowingLoading ? \n            <h5>Loading.........</h5> :\n            <div>\n              <Row>\n                {this.state.nowShowingList.slice(0,6).map((data, index) => \n                  <Col key={index}>\n                    <Card id=\"landing-page-card\">\n                      <Card.Img variant=\"top\" src={`https://image.tmdb.org/t/p/w500/${data.poster_path}`} />\n                      <Card.Body>\n                        <Card.Title id=\"movie-title\">{data.title}</Card.Title>\n                        <ListGroup className=\"list-group-flush\">\n                          <ListGroupItem>{data.release_date}</ListGroupItem>\n                          <ListGroupItem><FontAwesomeIcon icon={faStar} color=\"#f5af22\" /> {data.vote_average}</ListGroupItem>\n                        </ListGroup>\n                      </Card.Body>\n                      <Card.Body>\n                        <Card.Link href={`/movie-detail/${data.id}`}>View Details</Card.Link>\n                        <Card.Link href=\"#\">Watch trailer</Card.Link>\n                      </Card.Body>\n                    </Card>\n                  </Col>\n                )}\n              </Row>\n              <Row>\n                <Col lg={2} />\n                <Col lg={8}>\n                  <Button variant=\"secondary\" className=\"landing-page-button\" as={Link} to=\"/now-showing\">View More</Button>\n                </Col>\n                <Col lg={2} />\n              </Row> \n            </div>\n          }\n        </div>\n        <div className=\"movies-list-title container-wrapper\">\n          <p>Upcoming Movies</p>\n        </div>\n        <div className=\"movies-list container-wrapper\">\n          {this.state.upcomingLoading ? \n            <h5>Loading.........</h5> :\n            <div>\n              <Row>\n                {this.state.upcomingList.slice(0,6).map((data, index) => \n                  <Col key={index}>\n                    <Card id=\"landing-page-card\">\n                      <Card.Img variant=\"top\" src={`https://image.tmdb.org/t/p/w500/${data.poster_path}`} />\n                      <Card.Body>\n                        <Card.Title id=\"movie-title\">{data.title}</Card.Title>\n                        <ListGroup className=\"list-group-flush\">\n                          <ListGroupItem>{data.release_date}</ListGroupItem>\n                          <ListGroupItem><FontAwesomeIcon icon={faStar} color=\"#f5af22\" /> {data.vote_average}</ListGroupItem>\n                        </ListGroup>\n                      </Card.Body>\n                      <Card.Body>\n                        <Card.Link href={`/movie-detail/${data.id}`}>View Details</Card.Link>\n                        <Card.Link href=\"#\">Watch trailer</Card.Link>\n                      </Card.Body>\n                    </Card>\n                  </Col>\n                )}\n              </Row>\n              <Row>\n                <Col lg={2} />\n                <Col lg={8}>\n                  <Button variant=\"secondary\" className=\"landing-page-button\" as={Link} to=\"/upcoming\">View More</Button>\n                </Col>\n                <Col lg={2} />\n              </Row>\n            </div>\n          }\n        </div>\n      </div>\n    )\n  }\n}\n","// Returns a function, that, as long as it continues to be invoked, will not\n// be triggered. The function will be called after it stops being called for\n// N milliseconds. If `immediate` is passed, trigger the function on the\n// leading edge, instead of the trailing.\nexport default function debounce(func, wait, immediate) {\n\tvar timeout;\n\treturn function() {\n\t\tvar context = this, args = arguments;\n\t\tvar later = function() {\n\t\t\ttimeout = null;\n\t\t\tif (!immediate) func.apply(context, args);\n\t\t};\n\t\tvar callNow = immediate && !timeout;\n\t\tclearTimeout(timeout);\n\t\ttimeout = setTimeout(later, wait);\n\t\tif (callNow) func.apply(context, args);\n\t};\n};","import React, { Component } from 'react'\n\nexport default class Footer extends Component {\n  render() {\n    return (\n      <div className=\"footer\">\n        <h4>Footer</h4>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { Row, Col, Card } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nimport { getNowPlayingMovies } from '../services/moviesServices';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faStar } from '@fortawesome/free-solid-svg-icons';\n\nexport default class NowShowingMoviePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      nowShowingList: []\n    }\n  }\n\n  async componentDidMount() {\n    this.setState({ loading: true })\n\n    let nowShowingList = [];\n\n    try {\n      nowShowingList = await getNowPlayingMovies();\n    } catch (e) {\n      console.log('There is an error.......' , e);\n    }\n\n    this.setState({ \n      nowShowingList,\n      loading: false\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"container-wrapper movie-detail\">\n        <div className=\"movie-detail-container\">\n          <h3>Now Showing Movie</h3>\n          {this.state.loading ? \n            <h5 className=\"loading\">Loading.........</h5> :\n            <Row>\n              {this.state.nowShowingList.map((item, index) => \n                <Col lg={2} key={index}>\n                  <Card id=\"movie-list-card\" as={Link} to={`/movie-detail/${item.id}`}>\n                    <Card.Img variant=\"top\" src={`https://image.tmdb.org/t/p/w500/${item.poster_path}`} />\n                    <Card.Body id=\"movie-list-card-body\">\n                      <Card.Title>\n                        <p id=\"movie-list-rating\"><FontAwesomeIcon icon={faStar} color=\"#f5af22\" /> {item.vote_average}</p>\n                        <p id=\"movie-list-title\">{item.title}</p>\n                      </Card.Title>\n                    </Card.Body>\n                  </Card>\n                </Col>\n              )}\n            </Row>\n          }\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { Row, Col, Card } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nimport { getTopRatedMovies } from '../services/moviesServices';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faStar } from '@fortawesome/free-solid-svg-icons';\n\nexport default class TopRatedMoviesPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      topRatedList: []\n    }\n  }\n\n  async componentDidMount() {\n    this.setState({ loading: true });\n\n    let topRatedList = [];  \n    \n    try {\n      topRatedList = await getTopRatedMovies();\n    } catch (e) {\n      console.log('There is an error..........', e);\n    }\n\n    this.setState({\n      topRatedList,\n      loading: false\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"container-wrapper movie-detail\">\n        <div className=\"movie-detail-container\">\n          <h3>Top Rated Movies</h3>\n          {this.state.loading ? \n            <h5 className=\"loading\">Loading.........</h5> :\n            <Row>\n              {this.state.topRatedList.map((item, index) => \n                <Col lg={2} key={index}>\n                  <Card id=\"movie-list-card\" as={Link} to={`/movie-detail/${item.id}`}>\n                    <Card.Img variant=\"top\" src={`https://image.tmdb.org/t/p/w500/${item.poster_path}`} />\n                    <Card.Body id=\"movie-list-card-body\">\n                      <Card.Title>\n                        <p id=\"movie-list-rating\"><FontAwesomeIcon icon={faStar} color=\"#f5af22\" /> {item.vote_average}</p>\n                        <p id=\"movie-list-title\">{item.title}</p>\n                      </Card.Title>\n                    </Card.Body>\n                  </Card>\n                </Col>\n              )}\n            </Row>\n          }\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { Row, Col, Card } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nimport { getUpcomingMovies } from '../services/moviesServices';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faStar } from '@fortawesome/free-solid-svg-icons';\n\nexport default class UpcomingMoviesPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      upcomingList: []\n    }\n  }\n\n  async componentDidMount() {\n    this.setState({ loading: true })\n\n    let upcomingList = [];\n\n    try {\n      upcomingList = await getUpcomingMovies();\n    } catch (e) {\n      console.log('There is an error..........', e);\n    }\n\n    this.setState({\n      upcomingList,\n      loading: false\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"container-wrapper movie-detail\">\n        <div className=\"movie-detail-container\">\n          <h3>Upcoming Movie</h3>\n          {this.state.loading ? \n            <h5 className=\"loading\">Loading.........</h5> :\n            <Row>\n              {this.state.upcomingList.map((item, index) => \n                <Col lg={2} key={index}>\n                  <Card id=\"movie-list-card\" as={Link} to={`/movie-detail/${item.id}`}>\n                    <Card.Img \n                      variant=\"top\" \n                      src={ item.poster_path? `https://image.tmdb.org/t/p/w500/${item.poster_path}` : \"/no-image.jpg\"} \n                    />\n                    <Card.Body id=\"movie-list-card-body\">\n                      <Card.Title>\n                        <p id=\"movie-list-rating\"><FontAwesomeIcon icon={faStar} color=\"#f5af22\" /> {item.vote_average}</p>\n                        <p id=\"movie-list-title\">{item.title}</p>\n                      </Card.Title>\n                    </Card.Body>\n                  </Card>\n                </Col>\n              )}\n            </Row> \n          }\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { Row, Col } from 'react-bootstrap';\n\nimport { getCastCrewDetail } from '../services/moviesServices';\n\nexport default class CastCrewDetailPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      detail: []\n    }\n  }\n\n  async componentDidMount() {\n    this.setState({ loading: true })\n\n    let detail = [];\n\n    try {\n      detail = await getCastCrewDetail(this.props.match.params.id);\n    } catch (e) {\n      console.log(\"There is an error....\", e);\n    }\n\n    this.setState({\n      detail,\n      loading: false\n    })\n  }\n\n  getProfileUrl = (path) => {\n    if(!path) {\n      return '/no_photo_available.jpg'\n    }\n  \n    return `https://image.tmdb.org/t/p/w500/${path}`\n  }\n\n  render() {\n    return (\n      <div className=\"container-wrapper movie-detail\">\n        <div className=\"movie-detail-container\">\n          {this.state.loading ? \n            <h5 className=\"loading\">Loading.........</h5> :\n            <Row>\n              <Col lg={3}>\n                <img \n                  alt=\"\" \n                  src={ this.getProfileUrl(this.state.detail.profile_path) } \n                  id=\"movie-detail-image\" \n                />\n              </Col>\n              <Col lg={9}>\n                <h3>{ this.state.detail.name }</h3>\n                <p>Known For <i>{ this.state.detail.known_for_department }</i></p>\n                <ul className=\"basic-details\">\n                  <li>Birthday : { this.state.detail.birthday? this.state.detail.birthday : \"Not mentioned\"  }</li>\n                  <li>Birth-place : { this.state.detail.place_of_birth? this.state.detail.place_of_birth : \"Not mentioned\" }</li>\n                  <li>Gender : { this.state.detail.gender === 1 ? \"Female\" : \"Male\" }</li>\n                </ul>\n                <p className=\"overview\">{ this.state.detail.biography }</p>\n                <Row>\n                  {this.state.detail.credits && \n                    this.state.detail.credits.cast.length !== 0 ?\n                    <Col>\n                      <h5>Acting : </h5>\n                      {this.state.detail.credits.cast.map((item, index) => \n                        <li key={index}>\n                          <a href={`/movie-detail/${item.id}`} className=\"cast-crew-link\">{ item.title }</a>\n                          {item.character ? \n                            <p className=\"character-names\"> as { item.character }</p> \n                            : \"\" \n                          }\n                        </li>\n                      )}\n                    </Col> \n                    : \"\" \n                  }\n                  {this.state.detail.credits && \n                    this.state.detail.credits.crew.length !== 0 ?\n                    <Col>\n                      <h5>Involvements : </h5>\n                      {this.state.detail.credits.crew.map((item, index) => \n                        <li key={index}>\n                          <a href={`/movie-detail/${item.id}`} className=\"cast-crew-link\">{ item.title }</a>\n                          {item.job ? \n                            <p className=\"character-names\"> as { item.job }</p> \n                            : \"\" \n                          }\n                        </li>\n                      )}\n                    </Col> \n                    : \"\" \n                  }\n                </Row>\n              </Col>\n            </Row>\n          }\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { Row, Col, Card } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nimport { getSimilarMovies, getMovieDetail } from '../services/moviesServices';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faStar } from '@fortawesome/free-solid-svg-icons';\n\nexport default class SimilarMoviesPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      similarMovies: [],\n      movieDetail: []\n    }\n  }\n\n  async componentDidMount() {\n    this.setState({ loading: true });\n\n    let similarMovies = []; \n    let movieDetail = []; \n    \n    try {\n      similarMovies = await getSimilarMovies(this.props.match.params.id);\n      movieDetail = await getMovieDetail(this.props.match.params.id);\n    } catch (e) {\n      console.log('There is an error..........', e);\n    }\n\n    this.setState({\n      similarMovies,\n      movieDetail,\n      loading: false\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"container-wrapper movie-detail\">\n        <div className=\"movie-detail-container\">\n          <h3>Similar Movies to <b>{this.state.movieDetail.title}</b></h3>\n          {this.state.loading ? \n            <h5 className=\"loading\">Loading.........</h5> :\n            <Row>\n              {this.state.similarMovies.map((item, index) => \n                <Col lg={2} key={index}>\n                  <Card id=\"movie-list-card\" as={Link} to={`/movie-detail/${item.id}`}>\n                    <Card.Img variant=\"top\" src={`https://image.tmdb.org/t/p/w500/${item.poster_path}`} />\n                    <Card.Body id=\"movie-list-card-body\">\n                      <Card.Title>\n                        <p id=\"movie-list-rating\"><FontAwesomeIcon icon={faStar} color=\"#f5af22\" /> {item.vote_average}</p>\n                        <p id=\"movie-list-title\">{item.title}</p>\n                      </Card.Title>\n                    </Card.Body>\n                  </Card>\n                </Col>\n              )}\n            </Row>\n          }\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\n\nimport Header from './Header';\nimport MovieDetailPage from './MovieDetailPage';\nimport LandingPage from './LandingPage';\nimport Footer from './Footer';\nimport NowShowingMoviesPage from './NowShowingMoviesPage';\nimport TopRatedMoviesPage from './TopRatedMoviesPage';\nimport UpcomingMoviesPage from './UpcomingMoviesPage';\nimport CastCrewDetailPage from './CastCrewDetailPage';\nimport SimilarMoviesPage from './SimilarMoviesPage';\n\nexport class HomeContainer extends Component {\n  render() {\n    return (\n      <Container fluid=\"true\" className=\"main-container-wrapper\">\n        <Header />\n        <Switch>\n          <Route path=\"/movie-detail/:id\" render={(props) => <MovieDetailPage {...props} />}/>\n          <Route path=\"/cast-crew-detail/:id\" render={(props) => <CastCrewDetailPage {...props} />}/>\n          <Route path=\"/similar-movies/:id\" render={(props) => <SimilarMoviesPage {...props} />}/>\n          <Route path=\"/now-showing\">\n            <NowShowingMoviesPage />\n          </Route>\n          <Route path=\"/top-rated\">\n            <TopRatedMoviesPage />\n          </Route>\n          <Route path=\"/upcoming\">\n            <UpcomingMoviesPage />\n          </Route>\n          <Route path=\"/movies-app\">\n            <LandingPage />\n          </Route>\n        </Switch>\n        <Footer />\n      </Container>\n    )\n  }\n}\n\nexport default HomeContainer\n","import React from 'react';\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport HomeContainer from './components/HomeContainer';\n\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <HomeContainer />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = {\n  API_BASE_URL: 'https://api.themoviedb.org/3',\n  ACCESS_TOKEN: process.env.REACT_APP_TMDB_ACCESS_TOKEN\n}"],"sourceRoot":""}